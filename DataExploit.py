def multivariateLinearRegression( xFeatures, yfeature, file=None, players_data=None):

    os.chdir('/Users/nickdugal/Documents/Fantasy-Football/data')
    if players_data == None:
        try:
            players_data = pd.read_csv(file)
        except:
            print("Invalid file name or file path passed as argument")

    setList = set(list(players_data.columns))

    if not yfeature in setList:
        raise Exception(yfeature + "Feature doesn't exist. Did you mispell it or pass the from csv")
    if yfeature in set(xFeatures):
        xFeatures = set(xFeatures).difference([yfeature])
    for x in xFeatures:
        if not x in setList:
            raise Exception(x + "Feature doesn't exist. Did you mispell it or pass the from csv")


    X = players_data[list(xFeatures)].values.reshape(-1, len(xFeatures))
    Y = players_data[yfeature]

    # X_train, X_test, Y_train, Y_test = train_test_split(X, preprocessing.scale(Y))

    coeff_titles = list(xFeatures)
    coeff_titles.insert(0, 'Intercept')

    reg = linear_model.LinearRegression()

    model = reg.fit(X_train, Y_train)
    yfeature_prediction = model.predict(X_test)
    print("Predicting: ",yfeature)
    print("The Coeffecients:\n ")
    pattern = "%.2f"
    floatsstrings = [pattern % i for i in list(reg.coef_)]
    print(floatsstrings)


    mean2Err = mean_squared_error(Y_test, yfeature_prediction)
    varianceScore = r2_score(Y_test, yfeature_prediction)
    return (mean2Err, varianceScore)


def main():

if __name__=="__main__":main()